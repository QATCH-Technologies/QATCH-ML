{"trial_id": "01", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "conv_filters", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "kernel_size", "default": 3, "conditions": [], "values": [3, 5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "pool_size", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}, {"class_name": "Float", "config": {"name": "conv_dropout", "default": 0.2, "conditions": [], "min_value": 0.2, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "lstm_units", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.01, "conditions": [], "values": [0.01, 0.001, 0.0001], "ordered": true}}], "values": {"conv_filters": 96, "kernel_size": 5, "pool_size": 2, "conv_dropout": 0.2, "lstm_units": 96, "learning_rate": 0.01}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n  File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\paulm\\AppData\\Local\\Temp\\__autograph_generated_filek77p64k4.py\", line 15, in tf__train_function\n    retval_ = ag__.converted_call(ag__.ld(step_function), (ag__.ld(self), ag__.ld(iterator)), None, fscope)\nValueError: in user code:\n\n    File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\engine\\training.py\", line 1160, in train_function  *\n        return step_function(self, iterator)\n    File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\engine\\training.py\", line 1146, in step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\engine\\training.py\", line 1135, in run_step  **\n        outputs = model.train_step(data)\n    File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\engine\\training.py\", line 997, in train_step\n        self.optimizer.minimize(loss, self.trainable_variables, tape=tape)\n    File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\optimizers\\optimizer_v2\\optimizer_v2.py\", line 579, in minimize\n        return self.apply_gradients(grads_and_vars, name=name)\n    File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\optimizers\\optimizer_v2\\optimizer_v2.py\", line 689, in apply_gradients\n        grads_and_vars = optimizer_utils.filter_empty_gradients(grads_and_vars)\n    File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\optimizers\\optimizer_v2\\utils.py\", line 77, in filter_empty_gradients\n        raise ValueError(\n\n    ValueError: No gradients provided for any variable: (['conv1d/kernel:0', 'conv1d/bias:0', 'batch_normalization/gamma:0', 'batch_normalization/beta:0', 'lstm/lstm_cell/kernel:0', 'lstm/lstm_cell/recurrent_kernel:0', 'lstm/lstm_cell/bias:0', 'time_distributed/kernel:0', 'time_distributed/bias:0', 'chain_kernel:0', 'left_boundary:0', 'right_boundary:0', 'crf/dense_1/kernel:0', 'crf/dense_1/bias:0'],). Provided `grads_and_vars` is ((None, <tf.Variable 'conv1d/kernel:0' shape=(5, 3, 96) dtype=float32>), (None, <tf.Variable 'conv1d/bias:0' shape=(96,) dtype=float32>), (None, <tf.Variable 'batch_normalization/gamma:0' shape=(96,) dtype=float32>), (None, <tf.Variable 'batch_normalization/beta:0' shape=(96,) dtype=float32>), (None, <tf.Variable 'lstm/lstm_cell/kernel:0' shape=(96, 384) dtype=float32>), (None, <tf.Variable 'lstm/lstm_cell/recurrent_kernel:0' shape=(96, 384) dtype=float32>), (None, <tf.Variable 'lstm/lstm_cell/bias:0' shape=(384,) dtype=float32>), (None, <tf.Variable 'time_distributed/kernel:0' shape=(96, 5) dtype=float32>), (None, <tf.Variable 'time_distributed/bias:0' shape=(5,) dtype=float32>), (None, <tf.Variable 'chain_kernel:0' shape=(5, 5) dtype=float32>), (None, <tf.Variable 'left_boundary:0' shape=(5,) dtype=float32>), (None, <tf.Variable 'right_boundary:0' shape=(5,) dtype=float32>), (None, <tf.Variable 'crf/dense_1/kernel:0' shape=(5, 5) dtype=float32>), (None, <tf.Variable 'crf/dense_1/bias:0' shape=(5,) dtype=float32>)).\n\n"}